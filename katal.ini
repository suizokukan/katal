################################################################################
# project Katal : configuration file
################################################################################

#...............................................................................
# log file : use it to keep track of what's going on during the execution.
#...............................................................................
[log file]

# True/False; if False, all the messages are written only to the console.
use log file : True

# no quotation mark here !
name : messages.logs

# True/False; if False, the log file will grow after each execution.
overwrite : True

# log verbosity="high" or "low"; turn if off (=low) if the log message is too big 
# or too verbose.
verbosity : high

#...............................................................................
# displaying informations about the source/target directory
#...............................................................................
[display]

# max length of the file names displayed.
target filename.max length on console : 20
source filename.max length on console : 20

# max length of the hashids displayed. This integer can't be greater than 44.
hashid.max length on console : 20
# max length of the tags displayed.
tag.max length on console : 10

#...............................................................................
# the source directory : where is it ? what files must be choosed ?
#
# more than one sieve is allowed : [source.sieve1], [source.sieve2], ...
#...............................................................................
[source]
# no quotation mark here !
path : .

# eval function : if the result is True for a file, the file is selected.
#
# operators : &(and), (|), ^(xor), not
#
# e.g. :
#   eval : sieve1
#   eval : sieve1 | sieve2
#   eval : sieve1 & not(sieve2)
#   eval : not(sieve1 | sieve2)
eval : sieve1 | sieve2

[source.sieve1]
# a regex; e.g. for all files with an .jpg extension : .*\.jpg$
name : .*\.jpg$
# either >999, either <999, either =999, either <=999 either >=999
size : >1000000

[source.sieve2]
# a regex; e.g. for all files with an .jpg extension : .*\.jpg$
name : .*\.py$

#...............................................................................
# the target directory : where is it ? what name for the copied files ?
#...............................................................................
[target]

# no quotation mark here !
path : backup

# the new name for the target files is created using some keywords :
#
#   HASHID
#   SOURCENAME_WITHOUT_EXTENSION
#   SOURCENAME_WITHOUT_EXTENSION2
#   SOURCE_PATH
#   SOURCE_PATH2
#   SOURCE_EXTENSION
#   SOURCE_EXTENSION2
#   SIZE
#   DATE2
#   DATABASE_INDEX
#
#   n.b. : keywords ending by "2" are builded against a set of illegal characters
#          replaced by "_".
name of the target files : DATABASE_INDEX__SOURCENAME_WITHOUT_EXTENSION.SOURCE_EXTENSION2

