################################################################################
# project Katal : default configuration file
################################################################################

[source]
#...............................................................................
# The source directory : where is it ? what files must be choosed ?
#
# More than one filter is allowed : [source.filter1], [source.filter2], ...
#...............................................................................

# If you set path to . (=dot character), it means that the source path is the
# current directory (=the directory where the script katal.py is launched).
# The special character ~ is accepted.
path : .

# eval function : if the result is True for a file, the file is selected.
# o  operators : &(and), |(or), ^(xor), ~(not)
# o  the filter name must start with filter: filter1, filter_jpeg, etc.
#
# e.g. :
#   eval : filter1
#   eval : filter_a | filter_b
#   eval : filter1 & ~(filter2)
#   eval : ~(filter1 | filter2)
eval : filter1


[source.filter1]
# You may use the following filters : 'name', 'iname', 'date', 'size' and 'name not existing'
#
# example : all .jpg(.JPG, .Jpg...) files modified after 2015-09-17 01:27 and bigger than 1 Mb
#       iname : .*\.jpg$
#       date : >=2015-09-17 01:27
#       size : >1Mo
#
# other examples : 
#       iname : ^c.5$   -> only "c.5" and "C.5"
#
#       name : ^c.5$   -> only "c.5"
#
#       iname : c.5     -> "aac.5aa", "aacf5aa", "aaC.5aa", ...
#
#       date : =2015-09-17 01:27
#       date : >=2016-8-10
#       date : >=2015
#
#       size : =1Mo
#
#       name not existing : %%f.png -> will not copy image.jpg if image.png already exists
#       'name not existing' is a string  with the same special character expansion as for creating target name 
#       BEWARE: %%i cannot be used, and so this filter won't work with mode=nocopy
#
# Use 'name' for a case sensitive search, 'iname' for a case insensitive search.
#
# For the 'size' filter, suffixes may be :
#              "kB" : 1000
#              "KB" : 1000
#              "MB" : 1000**2
#              "GB" : 1000**3
#              "KiB": 1024
#              "MiB": 1024**2
#              "GiB": 1024**3
# 



[target]
#...............................................................................
# The target directory : what name for its files ?
#...............................................................................

# Three modes are available : 'copy', 'move' and 'nocopy'.
# o  'copy'   : source files are copied into the target directory .
# o  'move'   : source files are moved into the target directory .
# o  'nocopy' : no source file is copied into the target directory (the
#               target database being updated).
mode : copy

# The new name for the target files is created using some keywords, see below.
# o  if mode=nocopy, this paramater will automatically be ignored and replaced by %%i
# o  beware, due to limitations of the .ini format, use '%%', NOT '%' alone !
# o  keywords with a reduplicated letter (%%pp, %%ff, ...) are builded against
#    a set of illegal characters, each illegal character being replaced by "_".
#    See the remove_illegal_characters() function for a list of these illegal
#    characters .
# o  if you want to display files (with a file manager) sorted by date, you may
#    want to start their name with %%t (not with %%ht, this value
#    being problematic since Windows10 can't sort correctly files
#    whose name mixes digits and alphanumerics characters)
#
#   %%h  : hashid (e.g. GwM5NKzoZ76oPAbWwX7od0pI66xZrOHI7TWIggx+xFk=)
#
#   %%f  : source name (with the path), without the extension
#
#   %%ff : source name (with the path), without the extension
#          [see below, no forbidden characters]
#
#   %%p  : source path
#
#   %%pp : source path
#          [see below, no forbidden characters]
#
#   %%e  : source extension, without the dot character (e.g. jpg / no dot character !)
#
#   %%ee : source extension, without the dot character (e.g. jpg / no dot character !)
#          [see below, no forbidden characters]
#
#   %%s  : size (e.g. 123)
#
#   %%dd : date (e.g. 2015_09_25_06_50)
#          [see below, no forbidden characters]
#
#   %%i  : database index (e.g. 123)
#
#   %%t  : timestamp of the file (integer, e.g. 1445584562)
#
#   %%ht : timestamp of the file (hexadecimal, e.g. 5629DED0)
name of the target files : %%dd__%%i.%%e

# fill this line to add tags to each source file; use the same keywords as for
# "name of the target files"; let the string empty if there's no tags to be added.
#
# e.g. : "sunshine;trees;extension=%%e"
tags : 

#...............................................................................
# log file : use it to keep track of what's going on during the execution.
#...............................................................................
[log file]

# True/False; if False, all the messages are written only to the console.
use log file : True

# no quotation mark here !
name : messages.logs

# If either of maxBytes or backupCount is zero, rollover never occurs.
# If backupCount is non-zero, the system will save old log files by appending the extensions
# ‘.1’, ‘.2’ etc., to the filename.
# See https://docs.python.org/3.5/library/logging.handlers.html for more details.
backup count : 0

# Maximal size of a log file. Please use an integer (no "1To" string)
maximal size : 100000000

# True/False: if True, and if possible, the stream output will be colored
use color : True

#...............................................................................
# displaying informations about the source/target directory
#...............................................................................
[display]

# Max length of the file names displayed.
#
# If mode='nocopy', the "target filename.max length on console" value will be ignored.
target filename.max length on console : 30
source filename.max length on console : 40

# Max length of the hashids displayed. This integer can't be greater than 44.
hashid.max length on console : 20
# Max length of the string tag displayed.
tag.max length on console : 10
